<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:ap="clr-namespace:CoreLand.UI.AttachedProperties"
                    xmlns:convs="clr-namespace:CoreLand.UI.Converters">

    <!-- Version 2.0.0 -->

    <Style TargetType="{x:Type Button}">
        <Style.Resources>
            <convs:SolidColorBrushToColorConverter x:Key="SolidColorBrushToColorConverter"/>

            <SolidColorBrush x:Key="Button.Static.BorderBrush" Color="{DynamicResource SecondaryColor/300/100}"/>
            <SolidColorBrush x:Key="Button.Static.Background" Color="{DynamicResource SecondaryColor/500/100}"/>

            <SolidColorBrush x:Key="Button.Static.Foreground" Color="{DynamicResource OnSecondaryColor/500/100}"/>
            <SolidColorBrush x:Key="Button.MouseOver.Foreground" Color="{DynamicResource OnSecondaryColor/700/100}"/>
            <SolidColorBrush x:Key="Button.Pressed.Foreground" Color="{DynamicResource OnSecondaryColor/900/100}"/>
            <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="{DynamicResource OnDisabledColor/300/100}"/>

            <Storyboard x:Key="MouseOverAnimation">
                <ColorAnimation Storyboard.TargetProperty="Background.(SolidColorBrush.Color)" Storyboard.TargetName="PART_Border" To="{StaticResource SecondaryColor/700/100}" Duration="0:0:0.1"/>
                <ColorAnimation Storyboard.TargetProperty="BorderBrush.(SolidColorBrush.Color)" Storyboard.TargetName="PART_Border" To="{StaticResource SecondaryColor/300/100}" Duration="0:0:0.1"/>
            </Storyboard>

            <Storyboard x:Key="MousePressedAnimation">
                <ColorAnimation Storyboard.TargetProperty="Background.(SolidColorBrush.Color)" Storyboard.TargetName="PART_Border" To="{StaticResource SecondaryColor/900/100}" Duration="0:0:0.1"/>
                <ColorAnimation Storyboard.TargetProperty="BorderBrush.(SolidColorBrush.Color)" Storyboard.TargetName="PART_Border" To="{StaticResource SecondaryColor/300/100}" Duration="0:0:0.1"/>
            </Storyboard>

            <Storyboard x:Key="IsDisabledAnimation">
                <ColorAnimation Storyboard.TargetProperty="Background.(SolidColorBrush.Color)" Storyboard.TargetName="PART_Border" To="{StaticResource DisabledColor/300/100}" Duration="0:0:0.1"/>
                <ColorAnimation Storyboard.TargetProperty="BorderBrush.(SolidColorBrush.Color)" Storyboard.TargetName="PART_Border" To="{StaticResource SecondaryColor/300/100}" Duration="0:0:0.1"/>
            </Storyboard>

        </Style.Resources>
        <Setter Property="Background" Value="{DynamicResource Button.Static.Background}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource Button.Static.BorderBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource Button.Static.Foreground}"/>
        <Setter Property="Content" Value="Нажми на меня"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="PART_Border" SnapsToDevicePixels="True" BorderThickness="{TemplateBinding BorderThickness}">
                        <Border.Background>
                            <SolidColorBrush Color="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Background, Converter={StaticResource SolidColorBrushToColorConverter}}"/>
                        </Border.Background>
                        <Border.BorderBrush>
                            <SolidColorBrush Color="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderBrush, Converter={StaticResource SolidColorBrushToColorConverter}}"/>
                        </Border.BorderBrush>
                        <ContentPresenter x:Name="PART_ContentPresenter" Focusable="False" RecognizesAccessKey="True" 
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="{TemplateBinding Padding}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="TextElement.Foreground" TargetName="PART_ContentPresenter" Value="{StaticResource Button.MouseOver.Foreground}"/>
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="MouseOverStoryboardBeginer" Storyboard="{StaticResource MouseOverAnimation}"/>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <StopStoryboard BeginStoryboardName="MouseOverStoryboardBeginer" />
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="TextElement.Foreground" TargetName="PART_ContentPresenter" Value="{StaticResource Button.Pressed.Foreground}"/>
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="MousePressedStoryboardBeginer" Storyboard="{StaticResource MousePressedAnimation}"/>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <StopStoryboard BeginStoryboardName="MousePressedStoryboardBeginer" />
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" TargetName="PART_ContentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="IsDisabledStoryboardBeginer" Storyboard="{StaticResource IsDisabledAnimation}"/>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <StopStoryboard BeginStoryboardName="IsDisabledStoryboardBeginer" />
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
</ResourceDictionary>