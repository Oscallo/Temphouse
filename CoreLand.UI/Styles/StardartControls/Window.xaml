<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"                    
                    xmlns:ui="clr-namespace:CoreLand.UI.CustomControls"
                    xmlns:fil="clr-namespace:CoreLand.UI.Modules.Filling"
                    xmlns:com="clr-namespace:CoreLand.UI.Modules.Commands"
                    xmlns:coverter="clr-namespace:CoreLand.UI.Converters">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/CoreLand.UI;component/CommonDictionaries/WindowAndExtendedWindow.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <ControlTemplate x:Key="DefaultWindowTemplate" TargetType="{x:Type Window}">
        <ControlTemplate.Resources>
            <coverter:ToWhiteBackgroundBorderConventer x:Key="ToWhiteBackgroundBorderConventer"/>
        </ControlTemplate.Resources>
        <Grid>
            <Border x:Name="PART_Border"/>
            <Grid x:Name="PART_ExternalGrid" Background="{TemplateBinding Background}">
                <Grid.OpacityMask>
                    <VisualBrush Visual="{Binding ElementName=PART_Border,Converter={StaticResource ToWhiteBackgroundBorderConventer}}" />
                </Grid.OpacityMask>
                <Grid.RowDefinitions>
                    <RowDefinition Height="{Binding Source={StaticResource Window.HeaderBar.HeaderHeight}}"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Grid x:Name="PART_HeaderBar" Grid.Row="0" Panel.ZIndex="{Binding Source={StaticResource Window.HeaderBar.HeaderZIndex}}">
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Stretch" HorizontalAlignment="Left" Margin="20,20,0,0">
                        <Image Source="{TemplateBinding Icon}" Height="{Binding Source={StaticResource Window.HeaderBar.HeaderIconHeight}}" Width="{Binding Source={StaticResource Window.HeaderBar.HeaderIconWidth}}"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Stretch" HorizontalAlignment="Right" Margin="0,0,15,0">
                        <ui:RoundedButton x:Name="PART_Hide_Button" Style="{DynamicResource DefaultWindowRightButtonStyle}" Command="{x:Static com:ExtendedSystemCommands.HideInTreyWindowCommand}" ToolTip="Hide" Content="{x:Static fil:WindowButtonFilling.HideButtonFilling}"/>
                        <ui:RoundedButton x:Name="PART_Minimize_Button" Style="{DynamicResource DefaultWindowRightButtonStyle}" Command="{x:Static com:ExtendedSystemCommands.MinimizeWindowCommand}" ToolTip="Minimize" Content="{x:Static fil:WindowButtonFilling.MinimizeButtonFilling}"/>
                        <ui:RoundedButton x:Name="PART_MaximizeAndRestore_Button" Style="{DynamicResource DefaultWindowRightButtonStyle}"/>
                        <ui:RoundedButton x:Name="PART_Close_Button" Style="{DynamicResource DefaultWindowRightButtonStyle}" Command="{x:Static com:ExtendedSystemCommands.CloseWindowCommand}" ToolTip="Close" Content="{x:Static fil:WindowButtonFilling.CloseButtonFilling}"/>
                    </StackPanel>
                </Grid>
                <Grid Grid.RowSpan="2">
                    <AdornerDecorator>
                        <ContentPresenter
                            Content="{TemplateBinding Content}" 
                            ContentTemplate="{TemplateBinding ContentTemplate}" 
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </AdornerDecorator>
                    <ResizeGrip x:Name="WindowResizeGrip" HorizontalAlignment="Right" VerticalAlignment="Bottom" Visibility="Collapsed" IsTabStop="False" />
                </Grid>
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="ResizeMode" Value="CanResizeWithGrip">
                <Setter TargetName="WindowResizeGrip" Property="Visibility" Value="Visible" />
            </Trigger>

            <Trigger Property="WindowState" Value="Normal">
                <Setter TargetName="PART_MaximizeAndRestore_Button" Property="Command" Value="{x:Static com:ExtendedSystemCommands.MaximizeWindowCommand}"/>
                <Setter TargetName="PART_MaximizeAndRestore_Button" Property="Content" Value="{x:Static fil:WindowButtonFilling.MaximizeButtonFilling}"/>
                <Setter TargetName="PART_MaximizeAndRestore_Button" Property="ToolTip" Value="Maximize"/>

                <Setter TargetName="PART_ExternalGrid" Property="Margin" Value="0"/>

                <Setter TargetName="PART_Border" Property="BorderThickness" Value="1"/>
                <Setter TargetName="PART_Border" Property="CornerRadius" Value="20"/>
            </Trigger>

            <Trigger Property="WindowState" Value="Maximized">
                <Setter TargetName="PART_MaximizeAndRestore_Button" Property="Command" Value="{x:Static com:ExtendedSystemCommands.RestoreWindowCommand}"/>
                <Setter TargetName="PART_MaximizeAndRestore_Button" Property="Content" Value="{x:Static fil:WindowButtonFilling.RestoreButtonFilling}"/>
                <Setter TargetName="PART_MaximizeAndRestore_Button" Property="ToolTip" Value="Restore"/>

                <Setter TargetName="PART_ExternalGrid" Property="Margin" Value="7"/>

                <Setter TargetName="PART_Border" Property="BorderThickness" Value="7"/>
                <Setter TargetName="PART_Border" Property="CornerRadius" Value="0"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- Если убрать AllowsTransparency и WindowStyle, то есть возможность на полную кастомизацию -->
    <Style x:Key="DefaultWindowStyle" TargetType="{x:Type Window}">
        <Setter Property="RenderOptions.BitmapScalingMode" Value="HighQuality"/>
        <Setter Property="AllowsTransparency" Value="True"/>
        <Setter Property="Background" Value="{DynamicResource Window.Static.Background}"/>
        <Setter Property="Foreground" Value="{DynamicResource Window.Static.Foreground}"/>
        <Setter Property="MinHeight" Value="90"/>
        <Setter Property="MinWidth" Value="260"/>
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="WindowStyle" Value="None"/>
        <Setter Property="Template" Value="{DynamicResource DefaultWindowTemplate}"/>
        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome CaptionHeight="{DynamicResource Window.HeaderBar.HeaderHeight}"
                              CornerRadius="4"
                              GlassFrameThickness="0"
                              NonClientFrameEdges="None"
                              ResizeBorderThickness="5"
                              UseAeroCaptionButtons="False" />
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Стиль окна для дизайнера -->
    <Style TargetType="{x:Type Window}" BasedOn="{StaticResource DefaultWindowStyle}"/>


</ResourceDictionary>