<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:uiButtons="clr-namespace:CoreLand.UI.CustomControls.Buttons"
                    xmlns:uiWindows="clr-namespace:CoreLand.UI.CustomControls.Windows"
                    xmlns:fil="clr-namespace:CoreLand.UI.Design.Fillings"
                    xmlns:com="clr-namespace:CoreLand.UI.Commands"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:cp="clr-namespace:CoreLand.UI.CustomParameters">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/CoreLand.UI;component/Managers/Theme/DefaultColorScheme.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/CoreLand.UI;component/MVVM/Models/DataTemplates.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <!--#region Переменные -->

    <sys:Double x:Key="Window.HeaderBar.HeaderHeight">65</sys:Double>
    <x:Static x:Key="Window.HeaderBar.HeaderZIndex" Member="sys:Int32.MaxValue" />

    <x:Static x:Key="Window.HeaderBar.HeaderIconHeight" Member="cp:CustomSystemParameters.IconHeight"/>
    <x:Static x:Key="Window.HeaderBar.HeaderIconWidth" Member="cp:CustomSystemParameters.IconWidth"/>

    <!--#endregion-->

    <!--#region Цветовая схема -->

    <SolidColorBrush x:Key="Window.Static.Background" Color="{DynamicResource Window.Static.BackgroundColor}"/>
    <SolidColorBrush x:Key="Window.Static.Foreground" Color="{DynamicResource Window.Static.ForegroundColor}"/>

    <!--#endregion-->

    <Style x:Key="DefaultWindowRightButtonStyle" TargetType="{x:Type uiButtons:RoundedSquaredButton}">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Background" Value="#26FFFFFF"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Edge" Value="26"/>
        <Setter Property="CornerRadius" Value="20"/>
        <Setter Property="Margin" Value="0,0,10,0"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#4CFFFFFF"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="#4C616161"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="#7F252525"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <ControlTemplate x:Key="DefaultExtendedWindowTemplate" TargetType="{x:Type uiWindows:ExtendedWindow}">
        <Grid>
            <Grid x:Name="PART_ExternalGrid" Background="{TemplateBinding Background}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="{Binding Source={StaticResource Window.HeaderBar.HeaderHeight}}"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Grid x:Name="PART_HeaderBar" Grid.Row="0" Panel.ZIndex="{Binding Source={StaticResource Window.HeaderBar.HeaderZIndex}}">
                    <StackPanel x:Name="PART_HeaderLeft" Orientation="Horizontal" VerticalAlignment="Stretch" HorizontalAlignment="Left" Margin="20,20,0,0">
                        <Image x:Name="PART_Icon" Source="{TemplateBinding Icon}" Height="{Binding Source={StaticResource Window.HeaderBar.HeaderIconHeight}}" Width="{Binding Source={StaticResource Window.HeaderBar.HeaderIconWidth}}"/>
                    </StackPanel>
                    <StackPanel x:Name="PART_HeaderRight" Orientation="Horizontal" VerticalAlignment="Stretch" HorizontalAlignment="Right" Margin="0,0,15,0">
                        <uiButtons:RoundedSquaredButton x:Name="PART_Hide_Button" Style="{DynamicResource DefaultWindowRightButtonStyle}" Command="{x:Static com:ExtendedSystemCommands.HideInTreyWindowCommand}" ToolTip="Hide" Content="{x:Static fil:WindowButtonFilling.HideButtonFilling}"/>
                        <uiButtons:RoundedSquaredButton x:Name="PART_Minimize_Button" Style="{DynamicResource DefaultWindowRightButtonStyle}" Command="{x:Static com:ExtendedSystemCommands.MinimizeWindowCommand}" ToolTip="Minimize" Content="{x:Static fil:WindowButtonFilling.MinimizeButtonFilling}"/>
                        <uiButtons:RoundedSquaredButton x:Name="PART_MaximizeAndRestore_Button" Style="{DynamicResource DefaultWindowRightButtonStyle}"/>
                        <uiButtons:RoundedSquaredButton x:Name="PART_Close_Button" Style="{DynamicResource DefaultWindowRightButtonStyle}" Command="{x:Static com:ExtendedSystemCommands.CloseWindowCommand}" ToolTip="Close" Content="{x:Static fil:WindowButtonFilling.CloseButtonFilling}"/>
                    </StackPanel>
                </Grid>
                <Grid Grid.RowSpan="2">
                    <AdornerDecorator>
                        <ContentPresenter
                                Content="{TemplateBinding Content}" 
                                ContentTemplate="{TemplateBinding ContentTemplate}" 
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </AdornerDecorator>
                    <ResizeGrip x:Name="PART_WindowResizeGrip" HorizontalAlignment="Right" VerticalAlignment="Bottom" Visibility="Collapsed" IsTabStop="False" />
                </Grid>
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="uiWindows:ExtendedWindow.IsHideable" Value="False">
                <Setter TargetName="PART_Hide_Button" Property="Visibility" Value="Collapsed"/>
            </Trigger>
            
            <Trigger Property="ResizeMode" Value="CanResizeWithGrip">
                <Setter TargetName="PART_WindowResizeGrip" Property="Visibility" Value="Visible" />
            </Trigger>

            <Trigger Property="WindowStyle" Value="ToolWindow">
                <Setter TargetName="PART_Minimize_Button" Property="Visibility" Value="Collapsed"/>
                <Setter TargetName="PART_MaximizeAndRestore_Button" Property="Visibility" Value="Collapsed"/>
            </Trigger>

            <Trigger Property="WindowState" Value="Normal">
                <Setter TargetName="PART_MaximizeAndRestore_Button" Property="Command" Value="{x:Static com:ExtendedSystemCommands.MaximizeWindowCommand}"/>
                <Setter TargetName="PART_MaximizeAndRestore_Button" Property="Content" Value="{x:Static fil:WindowButtonFilling.MaximizeButtonFilling}"/>
                <Setter TargetName="PART_MaximizeAndRestore_Button" Property="ToolTip" Value="Maximize"/>

                <Setter TargetName="PART_ExternalGrid" Property="Margin" Value="0"/>
            </Trigger>

            <Trigger Property="WindowState" Value="Maximized">
                <Setter TargetName="PART_MaximizeAndRestore_Button" Property="Command" Value="{x:Static com:ExtendedSystemCommands.RestoreWindowCommand}"/>
                <Setter TargetName="PART_MaximizeAndRestore_Button" Property="Content" Value="{x:Static fil:WindowButtonFilling.RestoreButtonFilling}"/>
                <Setter TargetName="PART_MaximizeAndRestore_Button" Property="ToolTip" Value="Restore"/>

                <Setter TargetName="PART_ExternalGrid" Property="Margin" Value="7"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type uiWindows:ExtendedWindow}">
        <Setter Property="Background" Value="{DynamicResource Window.Static.Background}"/>
        <Setter Property="Foreground" Value="{DynamicResource Window.Static.Foreground}"/>
        <Setter Property="Template" Value="{DynamicResource DefaultExtendedWindowTemplate}"/>
        <Setter Property="RenderOptions.BitmapScalingMode" Value="HighQuality"/>
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="MinHeight" Value="90"/>
        <Setter Property="MinWidth" Value="260"/>
        <Setter Property="IsHideable" Value="True" />
        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome CaptionHeight="{DynamicResource Window.HeaderBar.HeaderHeight}"
                              CornerRadius="0"
                              GlassFrameThickness="0"
                              NonClientFrameEdges="None"
                              ResizeBorderThickness="5"
                              UseAeroCaptionButtons="False" />
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>