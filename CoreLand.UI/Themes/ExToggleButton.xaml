<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"  
                    xmlns:local="clr-namespace:CoreLand.UI.CustomControls.Buttons"
                    xmlns:ap="clr-namespace:CoreLand.UI.AttachedProperties"
                    xmlns:convs="clr-namespace:CoreLand.UI.Converters">

    <!-- Version 1.0.0 -->

    <!-- Нет динамического маштабирования -->
    <Style TargetType="{x:Type local:ExToggleButton}">
        <Style.Resources>
            
            <!--#region Converters -->
            <convs:ContentToVisibilityConverter x:Key="ContentToVisibilityConverter"/>
            <convs:SolidColorBrushToColorConverter x:Key="SolidColorBrushToColorConverter"/>
            <convs:ColorToSolidColorBrushConverter x:Key="ColorToSolidColorBrushConverter"/>
            <!--#endregion-->

            <!--#region Static Brushes -->
            <SolidColorBrush x:Key="ExToggleButton.Static.BorderBrush" Color="{DynamicResource SecondaryColor/300/100}"/>
            <SolidColorBrush x:Key="ExToggleButton.Static.EllipseBrush" Color="{DynamicResource NeutralColor/300/100}"/>
            <SolidColorBrush x:Key="ExToggleButton.Static.Background" Color="{DynamicResource NeutralColor/600/100}"/>
            <SolidColorBrush x:Key="ExToggleButton.Static.Foreground" Color="{DynamicResource OnNeutralColor/500/100}"/>
            <!--#endregion-->

            <!--#region MouseOver Brushes -->
            <SolidColorBrush x:Key="ExToggleButton.MouseOver.Foreground" Color="{DynamicResource OnNeutralColor/500/100}"/>
            <!--#endregion-->

            <!--#region Pressed Brushes -->
            <SolidColorBrush x:Key="ExToggleButton.Pressed.Foreground" Color="{DynamicResource OnNeutralColor/500/100}"/>
            <!--#endregion-->

            <!--#region Checked Brushes -->
            <SolidColorBrush x:Key="ExToggleButton.Checked.Foreground" Color="{DynamicResource OnNeutralColor/500/100}"/>
            <!--#endregion-->

            <!--#region Disabled Brushes -->
            <SolidColorBrush x:Key="ExToggleButton.Disabled.Foreground" Color="{DynamicResource OnDisabledColor/300/100}"/>
            <!--#endregion-->

            <!--#region Storyboards -->
            <Storyboard x:Key="MouseOverAnimation">
                <ColorAnimation Storyboard.TargetProperty="Background.(SolidColorBrush.Color)" Storyboard.TargetName="PART_Border" To="{StaticResource SecondaryColor/300/100}" Duration="0:0:0.1"/> <!---->
                <ColorAnimation Storyboard.TargetProperty="BorderBrush.(SolidColorBrush.Color)" Storyboard.TargetName="PART_Border" To="{StaticResource SecondaryColor/300/100}" Duration="0:0:0.1"/> <!---->
            </Storyboard>

            <Storyboard x:Key="MousePressedAnimation">
                <ColorAnimation Storyboard.TargetProperty="Background.(SolidColorBrush.Color)" Storyboard.TargetName="PART_Border" To="{StaticResource SecondaryColor/900/100}" Duration="0:0:0.1"/> <!---->
                <ColorAnimation Storyboard.TargetProperty="BorderBrush.(SolidColorBrush.Color)" Storyboard.TargetName="PART_Border" To="{StaticResource SecondaryColor/900/100}" Duration="0:0:0.1"/> <!---->
            </Storyboard>

            <Storyboard x:Key="IsDisabledAnimation">
                <ColorAnimation Storyboard.TargetProperty="Background.(SolidColorBrush.Color)" Storyboard.TargetName="PART_Border" To="{StaticResource SecondaryColor/900/100}" Duration="0:0:0.1"/> <!---->
                <ColorAnimation Storyboard.TargetProperty="BorderBrush.(SolidColorBrush.Color)" Storyboard.TargetName="PART_Border" To="{StaticResource SecondaryColor/900/100}" Duration="0:0:0.1"/> <!---->
            </Storyboard>

            <Storyboard x:Key="IsCheckedAnimation">
                <ColorAnimation Storyboard.TargetProperty="Background.(SolidColorBrush.Color)" Storyboard.TargetName="PART_Border" To="{StaticResource SecondaryColor/900/100}" Duration="0:0:0.1"/> <!---->
                <ColorAnimation Storyboard.TargetProperty="BorderBrush.(SolidColorBrush.Color)" Storyboard.TargetName="PART_Border" To="{StaticResource SecondaryColor/900/100}" Duration="0:0:0.1"/> <!---->
            </Storyboard>
            <!--#endregion-->

        </Style.Resources>
        
        <Setter Property="Background" Value="{DynamicResource ExToggleButton.Static.Background}"/>
        <Setter Property="Foreground" Value="{DynamicResource ExToggleButton.Static.Foreground}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ExToggleButton.Static.BorderBrush}"/>
        <Setter Property="EllipseBrush" Value="{DynamicResource ExToggleButton.Static.EllipseBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ExToggleButton}">
                    <StackPanel Orientation="Horizontal">
                        <ContentPresenter x:Name="PART_ContentPresenter" VerticalAlignment="Center" Margin="0,0,5,0" 
                              Visibility="{Binding Path=Content, RelativeSource={RelativeSource Mode=TemplatedParent},Converter={StaticResource ContentToVisibilityConverter}}" Content="{TemplateBinding Content}">
                            <TextBlock.Foreground>
                                <SolidColorBrush Color="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Foreground, Converter={StaticResource SolidColorBrushToColorConverter}}"/>
                            </TextBlock.Foreground>
                        </ContentPresenter>
                        <Border x:Name="PART_Border" CornerRadius="10" Width="40" Height="20"
                                BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderBrush.Color, Converter={StaticResource ColorToSolidColorBrushConverter}}">
                            <Border.Background>
                                <SolidColorBrush Color="{Binding Source={StaticResource ExToggleButton.Static.Background}, Converter={StaticResource SolidColorBrushToColorConverter}}"/>
                            </Border.Background>
                            <Border.Effect>
                                <DropShadowEffect ShadowDepth="0.5" Direction="0" Opacity="0.3" />
                            </Border.Effect>
                            <Ellipse x:Name="PART_Ellipse" Stretch="Uniform" Margin="2 1 2 1" HorizontalAlignment="Stretch">
                                <Ellipse.Fill>
                                    <SolidColorBrush Color="{Binding Source={StaticResource ExToggleButton.Static.EllipseBrush}, Converter={StaticResource SolidColorBrushToColorConverter}}"/>
                                </Ellipse.Fill>
                                <Ellipse.Effect>
                                    <DropShadowEffect BlurRadius="10" ShadowDepth="1" Opacity="0.3" Direction="260" />
                                </Ellipse.Effect>
                            </Ellipse>
                        </Border>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="TextElement.Foreground" TargetName="PART_ContentPresenter" Value="{StaticResource ExToggleButton.MouseOver.Foreground}"/>
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="MouseOverStoryboardBeginer" Storyboard="{StaticResource MouseOverAnimation}"/>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <StopStoryboard BeginStoryboardName="MouseOverStoryboardBeginer" />
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="TextElement.Foreground" TargetName="PART_ContentPresenter" Value="{StaticResource ExToggleButton.Pressed.Foreground}"/>
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="MousePressedStoryboardBeginer" Storyboard="{StaticResource MousePressedAnimation}"/>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <StopStoryboard BeginStoryboardName="MousePressedStoryboardBeginer" />
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="TextElement.Foreground" TargetName="PART_ContentPresenter" Value="{StaticResource ExToggleButton.Checked.Foreground}"/>
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="IsCheckedStoryboardBeginer" Storyboard="{StaticResource IsCheckedAnimation}"/>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <StopStoryboard BeginStoryboardName="IsCheckedStoryboardBeginer" />
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" TargetName="PART_ContentPresenter" Value="{StaticResource ExToggleButton.Disabled.Foreground}"/>
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="IsDisabledStoryboardBeginer" Storyboard="{StaticResource IsDisabledAnimation}"/>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <StopStoryboard BeginStoryboardName="IsDisabledStoryboardBeginer" />
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
</ResourceDictionary>